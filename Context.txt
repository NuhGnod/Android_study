https://shnoble.tistory.com/57

	#Context Definition
Interface to global information about an application environment.
This is an abstract class whose implementation is provided by the Android system. 
It allows access to application-specific resources and classes, as well as up-calls for application-level operations
such as launching activities, broadcasting and receiving intents, etc.

	#Context Role
ID role that tells you what app you are referring to
The role of a gateway to access ActivityManagerService

	#Context Type
Application Context
Activity Context

	#Application Context
Application Context is affected by the life-cycle of the application itself
The same object until one application runs and shuts down
The running application process is Singletone instances
From Activity or Service, Context can be obtained through getApplicationContext() through the getApplication() method
You will receive the same instances

	#Activity Context
Activity Context works with life-cycle of the Activity and disappears with the onDestroy()

	#BroadcastReceiver
It did not inherit Context itself
When onReceive(), you can import Context, where Context is ReceiverRestricterContext
And, two functions, registerReceiver() and binndService() cannot be used.
Each time the receiver processes the broadcast, a new Context is created.

	#ContextProvider
It did not inherit Context itself
After access, Context can be imported through getContext().

	#Context refer
LoginActivity.this refers to its own class that inherits Activity, but Activity also inherits Context class, so it can be used to provide activity context.
getApplication() refers to the application object, but Application class inherits the Context class, which can be used to provide application content.
getApplicationContext() provides acpplication context
getBaseContext() provides activity context..